syntax = "proto3";

package proto;
option go_package = "github.com/isard-vdi/isard/disk-operations/pkg/proto";

service DiskOperations {
    // rpc Create(CreateRequest) returns (CreateResponse) {}
    rpc Delete(DeleteRequest) returns (DeleteResponse) {}
    rpc Derivate(DerivateRequest) returns (DerivateResponse) {}
    // rpc Move(MoveRequest) returns (MoveResponse) {}
    // TODO: Upload / Download progress (stream)
    // rpc Upload(UploadRequest) returns (UploadResponse) {}
    // rpc Download(DownloadRequest) returns (DownloadResponse) {}
    //rpc ReplicateDisk(ReplicateDiskRequest) return (ReplicateDiskResponse) {}
}


// message CreateRequest {
//     enum DiskFormat {
//         DISK_FORMAT_UNKNOWN = 0;
//         DISK_FORMAT_QCOW2 = 1;
//         DISK_FORMAT_RAW = 2;
//     }

//     enum DiskPreallocation {
//         DISK_PREALLOCATION_UNKNOWN = 0;
//         DISK_PREALLOCATION_OFF = 1;
//         DISK_PREALLOCATION_ON = 2;
//     }

//     string name = 1;
//     int64 size = 2;
//     DiskFormat format = 3;
//     int32 cluster_size = 4;
//     DiskPreallocation preallocation = 5;
//     bool lazy_refcounts = 6;
// }

// message CreateResponse {}

message DeleteRequest {
    string path = 1;
}

message DeleteResponse {}

message DerivateRequest {
    string path = 1;
    string backing_file = 2;
    int32 cluster_size = 3;
}

message DerivateResponse {}

// message MoveRequest {
//     string source = 1;
//     string destination = 2;
// }

// message MoveResponse {}

// message DownloadRequest {
//     string name = 1;
//     string url = 2;
// }

// message  DownloadResponse {
//     bool result = 1;
// }